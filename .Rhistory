setwd ("D:\\Google Drive\\TAMU\\Teaching\\Teaching-R-Code-Yixing\\Week 1")
mini_case_data <- read_excel("Mini-case data.xlsx")
library(readxl)
library(dplyr)
library(ggplot2)
mini_case_data <- read_excel("Mini-case data.xlsx")
pdf_book(toc = TRUE, number_sections = TRUE, fig_caption = TRUE,
pandoc_args = NULL, ..., base_format = rmarkdown::pdf_document,
toc_unnumbered = TRUE, toc_appendix = FALSE, toc_bib = FALSE,
quote_footer = NULL, highlight_bw = FALSE)
summarise(mini_case_data $xad)
summary(mini_case_data $xad)
summary_sales <- mini_case_data %>% summarise(n = n(), mean_sales = mean(sales),std_dev_sales = sd(sales), min_sale = min(sales), max_sales = max(sales) )
summary_sales
sales_regression_with_controls  <-  lm(sales ~ xad+xrd+pure_b2b+fmsize_at+mksh2 ,data =mini_case_data )
# Summary of the regression
summary(sales_regression_with_controls)
install.packages("sjPlot")
library(sjPlot)
sales_regression_with_controls  <-  lm(sales ~ xad+xrd+pure_b2b+fmsize_at+mksh2 ,data =mini_case_data )
# Summary of the regression
summary(sales_regression_with_controls)
tab_model(m1)
sales_regression_with_controls  <-  lm(sales ~ xad+xrd+pure_b2b+fmsize_at+mksh2 ,data =mini_case_data )
# Summary of the regression
summary(sales_regression_with_controls)
sjPlot::tab_model(m1)
summ(sales_regression_with_controls)
summ(sales_regression_with_controls)
summary(sales_regression_with_controls, digits = 3)
summary(sales_regression_with_controls, digits = 1)
summary(sales_regression_with_controls, digits = 2)
summary(sales_regression_with_controls)$coeffitients
summary(sales_regression_with_controls)$coefficients
x <-summary(sales_regression_with_controls)
x$r.squared
x$fstatistic
# Summary stats - sales
summary_sales_by_group <- mini_case_data %>% group_by(pure_b2b)%>% summarise(n = n(), mean_sales = mean(sales),std_dev_sales = sd(sales), min_sale = min(sales), max_sales = max(sales) )
summary_sales_by_group
summary_sales_by_group <- mini_case_data %>% group_by(pure_b2b)%>% summarise(n = n(), mean_sales = mean(sales),std_dev_sales = sd(sales), min_sale = min(sales), max_sales = max(sales) )
summary_sales_by_group
plot(summary_sales_by_group$mean_sales)
?plot
plot(summary_sales_by_group$mean_sales, summary_sales_by_group$pure_b2b)
plot(summary_sales_by_group$mean_sales, summary_sales_by_group$pure_b2b)
ggplot(gd, aes(x = am, y = hp)) +
geom_bar(stat = "identity")
ggplot(summary_sales_by_group, aes(x = mean_sales, y = pure_b2b)) +
geom_bar(stat = "identity")
ggplot(summary_sales_by_group, aes(x = pure_b2b, y =mean_sales )) +
geom_bar(stat = "identity")
summary_sales_by_group$pure_b2b <- as.factor(summary_sales_by_group$pure_b2b)
ggplot(summary_sales_by_group, aes(x = pure_b2b, y =mean_sales )) +
geom_bar(stat = "identity")
ggplot(summary_sales_by_group, aes(x = pure_b2b, y =mean_sales )) +
geom_bar()
setwd("D:\\Google Drive\\TAMU\\Projets\\Hari\\Satisfaction Meta\\New Survey Nov 2020\\Dynata\\R Analysis")
rm(list = ls())
library(dplyr)    # alternatively, this also loads %>%
library(tidyverse)
library(foreign)
main_data <- foreign::read.dta("Stacked Dynata Data - 9809 Batch with new variables Jan 25.dta")
View(main_data)
View(x)
x
install.packages("fBasics")
var_list <- c("sales","xad","xrd")
mini_case_data[var_list]
summ_stats <- fBasics::basicStats(mini_case_data[var_list])
summ_stats <- as.data.frame(t(summ_stats))
View(summ_stats)
summ_stats <- fBasics::basicStats(mini_case_data[var_list])
View(summ_stats)
# Make a data.frame containing summary statistics of interest
summ_stats <- fBasics::basicStats(mini_case_data[var_list])
summ_stats <- as.data.frame(t(summ_stats))
View(summ_stats)
summ_stats <- summ_stats %>% select("nobs","Mean", "Stdev", "Minimum", "Maximum")
library(dplyr)
summ_stats <- summ_stats %>% select("nobs","Mean", "Stdev", "Minimum", "Maximum")
summ_stats <- summ_stats %>% rename('nobs'= 'N')
summ_stats <- summ_stats %>% select("nobs","Mean", "Stdev", "Minimum", "Maximum")
summ_stats <- summ_stats %>% rename('N'= 'nobs')
sales_regression_coef <- summary(sales_regression)$coefficients
sales_regression  <-  lm(sales ~ xad+xrd , data =mini_case_data )
# Summary of the regression
sales_regression_coef <- summary(sales_regression)$coefficients
sales_regression_coef
?read_excel
??read_excel
data_labels <- read_excel("Regression Demo Satisfaction", sheet = "Labels")
library(readxl)
data_labels <- read_excel("Regression Demo Satisfaction", sheet = "Labels")
data_labels <- read_excel("Regression Demo Satisfaction.xlsx", sheet = "Labels")
View(data_labels)
data_labels <- read_excel("Regression Demo Satisfaction.xlsx", sheet = "Labels")
data_labels <- data_labels[,-1]
knitr::kable(data_labels, format = "html")
data_labels <- read_excel("Regression Demo Satisfaction.xlsx", sheet = "Labels")
data_labels <- data_labels[,-3]
knitr::kable(data_labels, format = "html")
satisfaction_data$gender <- as.factor(satisfaction_data$gender)
satisfaction_data <- read_excel("Regression Demo Satisfaction.xlsx")
satisfaction_data$gender <- as.factor(satisfaction_data$gender)
View(satisfaction_data)
is.factor(satisfaction_data$GENDER)
satisfaction_data$GENDER <- as.factor(satisfaction_data$GENDER)
colnames(satisfaction_data)
# Check the correlations among variables in var_list
correlation_matrix <- cor(satisfaction_data[var_list])
# Make a list of variables you want summary statistics for
var_list <- c("OVERALLSATISFACTION","BID","PSQUAL", "PRICE", "INVOLVEMENT"  )
# Make a data.frame containing summary statistics of interest
summ_stats <- fBasics::basicStats(satisfaction_data[var_list])
summ_stats <- as.data.frame(t(summ_stats))
# Rename some of the columns for convenience
summ_stats <- summ_stats %>% select("nobs","Mean", "Stdev", "Minimum", "Maximum")
summ_stats <- summ_stats %>% rename('N'= 'nobs')
# Check the correlations among variables in var_list
correlation_matrix <- cor(satisfaction_data[var_list])
# Rounding off to two digits
round(correlation_matrix, 2)
# Check the correlations among variables in var_list
correlation_matrix <- cor(satisfaction_data[var_list])
# Rounding off to two digits
round(correlation_matrix, 3)
install.packages(pander)
install.packages("pander")
library(pander)
knitr::kable(correlation_matrix, format = "html")%>%
column_spec(2, width = "10em")
library(pander)
knitr::kable(correlation_matrix, format = "html")%>%
pander::column_spec(2, width = "10em")
library(pander)
knitr::kable(correlation_matrix, format = "html")%>%pander::column_spec(2, width = "10em")
library(pander)
knitr::kable(correlation_matrix, format = "html")%>%pander::column_spec(2, width = "10em")
?pander::column_spec
??pander::column_spec
install.packages("kableExtra")
library(kableExtra)
correlation_matrix %>%
kbl() %>%
kable_paper("hover", full_width = F)
library(kableExtra)
correlation_matrix %>%
kbl() %>%
kable_paper("hover", full_width = F)
knitr::kable(summary(satisfaction_regression), format = "html")
satisfaction_regression  <-  lm(OVERALLSATISFACTION ~ BID , data =satisfaction_data )
# Summary of the regression
satisfaction_regression_coef <- summary(satisfaction_regression)$coefficients
satisfaction_regression_r2 <- summary(satisfaction_regression)$r.squared
knitr::kable(summary(satisfaction_regression), format = "html")
install.packages("car")
model_vif <-round(model_vif, 3)
model_vif <- car::vif(satisfaction_regression_all)
satisfaction_regression_all  <-  lm(OVERALLSATISFACTION ~ BID+PSQUAL+PRICE+INVOLVEMENT+GENDER , data =satisfaction_data )
model_vif <- car::vif(satisfaction_regression_all)
model_vif <-round(model_vif, 3)
model_vif <- car::vif(satisfaction_regression_all)
model_vif <- as.data.frame(model_vif)
View(model_vif)
model_vif <-round(model_vif, 3)
model_vif <- as.data.frame(model_vif)
knitr::kable(model_vif, format = "html")
model_vif <-round(model_vif, 3)
model_vif <- as.data.frame(model_vif)
model_vif <- tibble::rownames_to_column(model_vif, "VALUE")
knitr::kable(model_vif, format = "html")
model_vif <-round(model_vif, 3)
