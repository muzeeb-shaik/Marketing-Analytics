[
["week-1.html", "1 Week 1 1.1 Mini-Example 1.2 Customer Model Analytics I: Regression", " 1 Week 1 1.1 Mini-Example 1.1.1 Task Description The goal of the mini-example is to examine the association between firm’s discretionary spending (advertising, R&amp;D) and top-line financial impact (sales) How many variables are in the dataset? Which ones are identifier, categorical vs. continuous? What is(are) the focal outcome variable(s)? What is(are) the focal predictor variable(s)? What is(are) the focal “control” variable(s)? What is the mean of sales, advertising and R&amp;D? How are sales, advertising and R&amp;D different in b2b vs. b2c firms? How do advertising and R&amp;D affect sales? 1.1.2 Variables in the Data Variable Name What does it mean? gvkey 6-digit Firm id datadate fiscal year pure_b2b Indicator: Only in B2B sector (1) – otherwise (0) Sales Sales in Millions of Dollars xad Advertising expenditure in millions of dollars xrd R&amp;D expenditure in millions of dollars fmsize_at Natural log of the book value of total assets mksh2 Ratio of firm’s overall sales revenue to the sales revenue of all firms in the same 2-digit SIC code industry 1.1.3 Analysis using R The first step is to include all the libraries we use in this exercise. An alternative approach is to load libraries specific to functions before using the function. library(readxl) library(dplyr) library(ggplot2) The next step is to import data. We will use the read_excel function to import excel file into R. You can use the setwd function to set the working directory to the folder which has your data or give the full path of your excel file wile reading the excel file. # Importing Data mini_case_data &lt;- read_excel(&quot;Mini-case data.xlsx&quot;) 1.1.3.1 Summary Statistics In R, there are multiple ways to check the summary statistics of your data. (Link 1,Link 2) # Summary stats - sales summary_sales &lt;- mini_case_data %&gt;% summarise(n = n(), mean_sales = mean(sales),std_dev_sales = sd(sales), min_sale = min(sales), max_sales = max(sales) ) summary_sales ## # A tibble: 1 x 5 ## n mean_sales std_dev_sales min_sale max_sales ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1000 20082. 34027. 29.7 160123 # Summary stats - xad summary_xad &lt;- mini_case_data %&gt;% summarise(n = n(), mean_xad = mean(xad),std_dev_xad = sd(xad), min_sale = min(xad), max_xad = max(xad) ) summary_xad ## # A tibble: 1 x 5 ## n mean_xad std_dev_xad min_sale max_xad ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1000 485. 806. 0.397 3698 # Summary stats - xrd summary_xrd &lt;- mini_case_data %&gt;% summarise(n = n(), mean_xrd = mean(xrd),std_dev_xrd = sd(xrd), min_sale = min(xrd), max_xrd = max(xrd) ) summary_xrd ## # A tibble: 1 x 5 ## n mean_xrd std_dev_xrd min_sale max_xrd ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1000 789. 1716. 0 7400 We can also compare summary statistics by grouping the data based on some categorical variables. In our case, we will group the data by pure_b2b and compare the summary statistics # Summary stats - sales summary_sales_by_group &lt;- mini_case_data %&gt;% group_by(pure_b2b)%&gt;% summarise(n = n(), mean_sales = mean(sales),std_dev_sales = sd(sales), min_sale = min(sales), max_sales = max(sales) ) summary_sales_by_group ## # A tibble: 2 x 6 ## pure_b2b n mean_sales std_dev_sales min_sale max_sales ## &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 873 21027. 36148. 29.7 160123 ## 2 1 127 13584. 9391. 2960. 53999 Similarly we can compare for other variables. 1.1.3.2 Graph of Mean Sales (B2B vs. non-B2B Firms) We can plot the mean sales for B2B vs. non-B2B Firms # Convert pure_b2b as a factor variable summary_sales_by_group$pure_b2b &lt;- as.factor(summary_sales_by_group$pure_b2b) # Plot ggplot(summary_sales_by_group, aes(x = pure_b2b, y =mean_sales )) + geom_bar(stat = &quot;identity&quot;) + ylab(&quot;Mean Sales&quot;) + ggtitle(&quot;Mean of Sales by pure_b2b&quot;) 1.1.3.3 Sales Regression The following link provides a brief introduction to linear regression. http://uc-r.github.io/linear_regression For our sales regression Dependent Variable : sales Independet Variables: xad,xrd sales_regression &lt;- lm(sales ~ xad+xrd , data =mini_case_data ) # Summary of the regression summary(sales_regression)$coefficients ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5273.430435 881.2489482 5.984042 3.032149e-09 ## xad 25.077253 1.2282534 20.417002 1.095284e-77 ## xrd 3.346444 0.5768758 5.800979 8.847303e-09 summary(sales_regression)$r.squared ## [1] 0.5117014 The regression results show the following Advertising (25.0773) and R&amp;D (3.3464) have a positive effect on revenue R-squared (model fit index) is 0.5117 We can add more control variables to the regression model Control Variables: pure_b2b, fmsize_at, mksh2 sales_regression_with_controls &lt;- lm(sales ~ xad+xrd+pure_b2b+fmsize_at+mksh2 ,data =mini_case_data ) # Summary of the regression summary(sales_regression_with_controls)$coefficients ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -39982.337166 3956.2692006 -10.106071 6.359213e-23 ## xad 15.939687 1.1975483 13.310267 2.564608e-37 ## xrd 2.978288 0.5275706 5.645289 2.150902e-08 ## pure_b2b -4806.439350 2091.3768307 -2.298218 2.175625e-02 ## fmsize_at 5179.377668 505.7198986 10.241594 1.802798e-23 ## mksh2 104078.783632 9682.0954844 10.749613 1.421889e-25 summary(sales_regression_with_controls)$r.squared ## [1] 0.6434498 For the new model R-squared (model fit index) improves to 0.6434 from 0.5117 The relationship between control variables and sales makes sense 1.2 Customer Model Analytics I: Regression "]
]
